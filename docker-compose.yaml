# Fichier: docker-compose.yaml
version: '3.8'

services:
  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=attendance_db
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app
    env_file:
      - .env
    depends_on:
      - db
      - redis

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.worker
    volumes:
      - ./backend/app:/app/app
    env_file:
      - .env
    depends_on:
      - redis
      - db

  beat:
    build:
      context: ./backend
      dockerfile: Dockerfile.worker # Utilise la mÃªme image que le worker
    command: celery -A app.worker beat -l INFO
    volumes:
      - ./backend/app:/app/app
    env_file:
      - .env
    depends_on:
      - redis
      - db

  frontend:
    build:
      context: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    env_file:
      - .env

volumes:
  postgres_data: