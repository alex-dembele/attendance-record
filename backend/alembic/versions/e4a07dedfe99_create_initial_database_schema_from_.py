"""Create initial database schema from models

Revision ID: e4a07dedfe99
Revises:
Create Date: 2025-07-28 18:35:01.411471

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "e4a07dedfe99"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "app_parameters",
        sa.Column("key", sa.String(length=100), nullable=False),
        sa.Column("value", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("key"),
    )
    op.create_table(
        "departments",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "holidays",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("date"),
    )
    op.create_table(
        "roles",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "name",
            sa.String(length=50),
            nullable=False,
            comment="e.g., 'ADMIN', 'RH', 'MANAGER', 'EMPLOYEE'",
        ),
        sa.Column(
            "permissions",
            sa.JSON(),
            nullable=True,
            comment="Permissions specific to the role",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "schedules",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "name",
            sa.String(length=100),
            nullable=False,
            comment="e.g., 'Standard 9h-18h'",
        ),
        sa.Column("start_time", sa.Time(), nullable=False),
        sa.Column("end_time", sa.Time(), nullable=False),
        sa.Column("break_start_time", sa.Time(), nullable=True),
        sa.Column("break_end_time", sa.Time(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("hashed_password", sa.String(length=255), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("role_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_table(
        "attendance_raw_imports",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("file_name", sa.String(length=255), nullable=False),
        sa.Column(
            "storage_path",
            sa.String(length=512),
            nullable=False,
            comment="Path to original file in S3/MinIO",
        ),
        sa.Column(
            "status",
            sa.String(length=50),
            nullable=False,
            comment="PENDING, PROCESSING, COMPLETED, FAILED",
        ),
        sa.Column("uploaded_at", sa.DateTime(), nullable=False),
        sa.Column("processing_log", sa.Text(), nullable=True),
        sa.Column("uploaded_by_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["uploaded_by_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "audit_logs",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column(
            "action",
            sa.String(length=255),
            nullable=False,
            comment="e.g., 'LOGIN', 'USER_CREATE'",
        ),
        sa.Column(
            "target_resource",
            sa.String(length=100),
            nullable=True,
            comment="e.g., 'user', 'department'",
        ),
        sa.Column("target_id", sa.String(), nullable=True),
        sa.Column("details", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column(
            "user_id", sa.UUID(), nullable=True, comment="User who performed the action"
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "employees",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "employee_id",
            sa.String(length=50),
            nullable=False,
            comment="Matricule de l'employ√©",
        ),
        sa.Column("first_name", sa.String(length=100), nullable=False),
        sa.Column("last_name", sa.String(length=100), nullable=False),
        sa.Column("hire_date", sa.Date(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column(
            "user_id",
            sa.UUID(),
            nullable=True,
            comment="Lien vers le compte utilisateur pour la connexion",
        ),
        sa.Column("department_id", sa.UUID(), nullable=True),
        sa.Column("schedule_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["department_id"],
            ["departments.id"],
        ),
        sa.ForeignKeyConstraint(
            ["schedule_id"],
            ["schedules.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_index(
        op.f("ix_employees_employee_id"), "employees", ["employee_id"], unique=True
    )
    op.create_table(
        "attendance_entries",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column(
            "entry_type", sa.Enum("IN", "OUT", name="entry_type_enum"), nullable=False
        ),
        sa.Column("employee_id", sa.UUID(), nullable=False),
        sa.Column("raw_import_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["employees.id"],
        ),
        sa.ForeignKeyConstraint(
            ["raw_import_id"],
            ["attendance_raw_imports.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_attendance_entries_employee_id"),
        "attendance_entries",
        ["employee_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_attendance_entries_timestamp"),
        "attendance_entries",
        ["timestamp"],
        unique=False,
    )
    op.create_table(
        "leave_requests",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=False),
        sa.Column("reason", sa.Text(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("PENDING", "APPROVED", "REJECTED", name="leave_status_enum"),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("employee_id", sa.UUID(), nullable=False),
        sa.Column("requestor_user_id", sa.UUID(), nullable=True),
        sa.Column("approver_user_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["approver_user_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["employees.id"],
        ),
        sa.ForeignKeyConstraint(
            ["requestor_user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_leave_requests_status"), "leave_requests", ["status"], unique=False
    )
    op.create_table(
        "work_sessions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("session_date", sa.Date(), nullable=False),
        sa.Column("check_in", sa.DateTime(), nullable=True),
        sa.Column("check_out", sa.DateTime(), nullable=True),
        sa.Column("worked_hours_seconds", sa.BigInteger(), nullable=True),
        sa.Column("overtime_seconds", sa.BigInteger(), nullable=True),
        sa.Column("break_deduction_seconds", sa.BigInteger(), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "ON_TIME",
                "LATE",
                "ABSENT",
                "ON_LEAVE",
                "HOLIDAY",
                name="session_status_enum",
            ),
            nullable=False,
        ),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("employee_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["employees.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_work_sessions_employee_id"),
        "work_sessions",
        ["employee_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_work_sessions_session_date"),
        "work_sessions",
        ["session_date"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_work_sessions_session_date"), table_name="work_sessions")
    op.drop_index(op.f("ix_work_sessions_employee_id"), table_name="work_sessions")
    op.drop_table("work_sessions")
    op.drop_index(op.f("ix_leave_requests_status"), table_name="leave_requests")
    op.drop_table("leave_requests")
    op.drop_index(
        op.f("ix_attendance_entries_timestamp"), table_name="attendance_entries"
    )
    op.drop_index(
        op.f("ix_attendance_entries_employee_id"), table_name="attendance_entries"
    )
    op.drop_table("attendance_entries")
    op.drop_index(op.f("ix_employees_employee_id"), table_name="employees")
    op.drop_table("employees")
    op.drop_table("audit_logs")
    op.drop_table("attendance_raw_imports")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_table("schedules")
    op.drop_table("roles")
    op.drop_table("holidays")
    op.drop_table("departments")
    op.drop_table("app_parameters")
    # ### end Alembic commands ###
