# Fichier: backend/Dockerfile.worker

# Les étapes sont identiques à celles du Dockerfile principal,
# nous utilisons donc le même builder pour optimiser.

# --- Stage 1: Builder (identique au Dockerfile du backend) ---
FROM python:3.12-slim-bookworm AS builder
WORKDIR /app
RUN apt-get update && apt-get install -y --no-install-recommends gcc build-essential
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# --- Stage 2: Runner ---
FROM python:3.12-slim-bookworm AS runner
WORKDIR /app
COPY --from=builder /opt/venv /opt/venv
COPY ./app /app/app

RUN useradd --create-home appuser
USER appuser

ENV PATH="/opt/venv/bin:$PATH"

# Commande pour lancer le worker Celery
CMD ["celery", "-A", "app.worker", "worker", "--loglevel=INFO"]